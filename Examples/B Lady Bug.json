{
    "problem": {
        "title": "B. Lady Bug",
        "description": "As soon as Dasha Purova crossed the border of France, the villain Markaron kidnapped her and placed her in a prison under his large castle. Fortunately, the wonderful Lady Bug, upon hearing the news about Dasha, immediately ran to save her in Markaron's castle. However, to get there, she needs to crack a complex password.The password consists of two bit strings aa and bb, each of which has a length of nn. In one operation, Lady Bug can choose any index 2≤i≤n2≤i≤n and perform one of the following actions: swap(aiai, bi−1bi−1) (swap the values of aiai and bi−1bi−1), or swap(bibi, ai−1ai−1) (swap the values of bibi and ai−1ai−1). Lady Bug can perform any number of operations. The password is considered cracked if she can ensure that the first string consists only of zeros. Help her understand whether or not she will be able to save the unfortunate Dasha.",
        "input": "InputEach test consists of several test cases. The first line of the input data contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of the test cases follows.The first line of each test case contains one integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the length of the bit strings of the password. The next two lines contain the bit strings of length nn, aa and bb, which represent the password. Each of the strings contains only the characters 0 and '1'. It is guaranteed that the sum of nn across all test cases does not exceed 2⋅1052⋅105.",
        "output": "OutputFor each test case, output \"YES\" if Lady Bug can crack the password after any number of operations; otherwise, output \"NO\".You can output each letter in any case (lowercase or uppercase). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be accepted as a positive answer.",
        "time_limit": "1 second",
        "memory_limit": "256 megabytes",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "math",
            "*1000"
        ],
        "examples": [
            {
                "input": "4300000060100010101115100000101021100",
                "output": "YES YES NO YES"
            }
        ]
    },
    "solution": {
        "description": "Note that you can split strings aa and bb into two \"zig-zags\": a0,b1,a2,b3,…a0,b1,a2,b3,… and b0,a1,b2,a3,…b0,a1,b2,a3,…. For each of these zig-zags, you can achieve any sequence of 0s and 1s, provided that their quantities within the zig-zag are preserved. Therefore, the answer is Yes if and only if the number of 0 is at least ⌈n2⌉⌈n2⌉ in the first zig-zag and at least ⌊n2⌋⌊n2⌋ in the second one.",
        "code": "t = int(input())\n \nfor test in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    cnt1, cnt2 = 0, 0\n    for i in range(n):\n        if i % 2:\n            cnt2 += (a[i] == '0')\n            cnt1 += (b[i] == '0')\n        else:\n            cnt1 += (a[i] == '0')\n            cnt2 += (b[i] == '0')\n \n    if cnt1 >= (n + 1) // 2 and cnt2 >= n // 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n"
    }
}